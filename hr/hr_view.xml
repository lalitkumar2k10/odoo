<?xml version="1.0" encoding="utf-8"?>
<openerp>
	<data>
<!-- learning start-->
			<!--Steps for UPDATING EXISTING Tree view -->
			<!--step 1. create a record with unique id and 'view model'-->
		<record id="hr_product_template_tree_view" model="ir.ui.view">

			<!--step 2. inherit if required using ref that is 'external identifier'-->
			<field name="inherit_id" ref="product.product_template_tree_view" />

			<!--step 3. use model -->
			<field name="model">product.template</field>

			<!--step 4. update arch which is again xml:p -->
			<!--note:- standard_price label issues use group tag but still right align problem!! -->
			<field name="arch" type="xml">
				<field name="type" position="after">
					<field name="testdata" />
				</field>
			<!--step 5. update openerp file 'data':['hr_view.xml'],  -->

			<!--step 6. ctrl+c to stop server, up arrow to re run, refresh browser   -->
			</field>
		</record>

		    <!--Steps for UPDATING EXISTING Form view -->
			<!--step 1. create a record with id and 'view model' -->
		<record id="hr_product_template_form_view" model="ir.ui.view">

			<!--step 2. inherit if required, mention ref->externnal identifier -->
			<field name="inherit_id" ref="product.product_template_only_form_view" />

			<!--step 3. use model 'yhi use kro filal for this kind of work'-->
			<field name="model">product.template</field>

			<!--step 4. update arch -->
			<field name="arch" type="xml">
				<field name="type" position="after">
					<field name="testdata" />
				</field>

			<!--step 5. update openerp file 'data':['hr_view.xml'], which you did already :-p -->

			<!--step 6. ctrl+c to stop server, up arrow to re run, refresh browser   -->
			</field>
		</record>

			<!--Steps for creating action 1 (DUPLICATED)-->
			<!--note:-record id and menuitem action should be same-->
			<!--step 1. added record with id and 'action model' -->
		<record id="product.product_template_action_hr" model="ir.actions.act_window">

			<!--step 2. add name -->
            <field name="name">Hr</field>

            <!--step 3. add type 'yhi use kro filal for this kind of work'-->
            <field name="type">ir.actions.act_window</field>

            <!--step 4. add res_model:- 'yhi use kro filal for this kind of work' -->
            <field name="res_model">product.template</field>

            <!--step 5. add view_mode:- choose the order->  from them first will be applied -->
            <field name="view_mode">kanban,tree,form</field>

            <!--step 6. add view_type:- will tell(can choose from form, tree) -->
            <field name="view_type">form</field>

            <!--step 7. add view_id :- the external identifier-->
            <!-- also responsible for setting default view which,
             is first in order as mentioned in view_mode -->
            <field name="view_id" ref="product.product_template_kanban_view"/>

            <!--step 8. add context:- to put values by default such as search or field value -->
            <!--note this will be added on action view -->
            <field name="context">{"default_testdata":1}</field>

            <!--step 9. add domain:- to filter on load-->
            <!--note this will be added on action view -->

            <!-- Approach 1 
            <field name="domain">[('testdata','=',1)]</field> -->

            <!-- Approach 2 add below and remove above field, don't hurry to remove from model->testdata-->
            <!--Note:- Below is a reference as you can access categ_id and it's further fields that shows up in sales->product->product category, all those fields on hover, their name can be seen -->

            <field name="domain">[('categ_id.name','=','Hr')]</field>

            <!--step 10. add help in html -->
            <field name="help" type="html">
                <p class="oe_view_nocontent_create">
                    Click to define a new hr.
                </p>

            <!--step 11. ctrl+c to stop server, up arrow to re run, refresh browser   -->
            </field>
        </record>


            <!--Steps for CREATING MENUITEM 1 (CUSTOM CREATED)-->
            <!--note:-record id and menuitem action should be same-->
        <menuitem action="product.product_template_action_hr"
            id="menu_product_template_action_hr"
            parent="base.menu_sales" sequence="14" />

<!-- learning end-->

<!-- views start-->
            <!--Steps for updating existing Form view (of CUSTOM CREATED action and menuitem)-->
            <!--step 1. create a record with id and 'view model' -->
        <record id="hr_detail_view_form" model="ir.ui.view">

            <!--step 2. (not using) inherit if required, mention ref->externnal identifier -->
            <!-- <field name="inherit_id" ref="product.product_template_only_form_view" /> -->

            <!--step 3. use model 'yhi use kro filal for this kind of work'-->
            <!-- hr.detail  -->
            <field name="model">hr.detail</field>

            <!--step 4. use model 'yhi use kro filal for this kind of work'-->
            <!-- for now, not mentioning view_type bcoz <form>...</form> tag is defining that
            it is an update for form.
            Similarly, if want to update tree or kanban or search or any other view,
            use corresponding tag and SUPPORTED FIELD.-->
            <!-- SUPPORTED FIELD is highlighted for reason to stress more on
            sheet tag and others are not supported in <kanban>...</kanban>
            hence, use what's supported there -->
            <!-- <field name="view_type">form</field> -->

            <!--step 5. update arch -->
            <field name="arch" type="xml">
                <form>
                    <group>
                        <field name="name" />
                        <field name="join_date" />
                        <field name="user_id" />
                    </group>
                    <!-- notebook -->
                    <notebook>
                                <page name="hrteamnotebook" string="hr team notebook">
                                   <group>
                                        <field name="notes" />
                                    </group>
                                </page>
                        </notebook>
                </form>
            <!--step 6. update openerp file 'data':['hr_view.xml'], which you did already :-p -->

            <!--step 7. ctrl+c to stop server, up arrow to re run, refresh browser   -->
            </field>
        </record>

            <!--Steps for updating existing Form view (of CUSTOM CREATED action and menuitem)-->
            <!-- for illustrating notebook in form view -->
            <!--step 1. create a record with id and 'view model' -->
        <record id="hr_team_view_form" model="ir.ui.view">

            <!--step 2. (not using) inherit if required, mention ref->externnal identifier -->
            <!-- <field name="inherit_id" ref="product.product_template_only_form_view" /> -->

            <!--step 3. use model 'yhi use kro filal for this kind of work'-->
            <!-- hr.detail  -->
            <field name="model">hr.team</field>

            <!--step 4. use model 'yhi use kro filal for this kind of work'-->
            <!-- for now, not mentioning view_type bcoz <form>...</form> tag is defining that
            it is an update for form.
            Similarly, if want to update tree or kanban or search or any other view,
            use corresponding tag and SUPPORTED FIELD.-->
            <!-- SUPPORTED FIELD is highlighted for reason to stress more on
            sheet tag and others are not supported in <kanban>...</kanban>
            hence, use what's supported there -->
            <!-- <field name="view_type">form</field> -->

            <!--step 5. update arch -->
            <field name="arch" type="xml">
                
                    <form>
                        <group>
                            <field name="name" />
                        </group>
                        <!-- for adding notebook by creating another model, menuitem, action record, form view huhh!! -->
                        <!-- this is something in notebook can not explain
                        please ignore STARTS-->
                        <!-- its in extra.xml -->
                        <!-- this is something i can not explain
                        please ignore ENDS-->
                    </form>
                
            <!--step 6. update openerp file 'data':['hr_view.xml'], which you did already :-p -->

            <!--step 7. ctrl+c to stop server, up arrow to re run, refresh browser   -->
            </field>
        </record>
<!-- views end-->

<!-- actions start-->
            <!--Steps for CREATING ACTION 3 (CUSTOM CREATED) -->
            <!--note:-record id and menuitem action should be same-->
            <!--step 1. added record with id and 'action model' -->
        <record id="hr_detail_action" model="ir.actions.act_window">

            <!--step 2. add name -->
            <field name="name">Hr Detail</field>

            <!--step 3. add type 'yhi use kro filal for this kind of work'-->
            <field name="type">ir.actions.act_window</field>

            <!--step 4. add 'res_model'in action !!:- 'yhi use kro filal for this kind of work' -->
            <field name="res_model">hr.detail</field>

            <!--step 5. add view_mode:- choose the order->  from them first will be applied -->
            <field name="view_mode">tree,kanban,form</field>

            <!--step 6. add view_type:- will tell -->
            <field name="view_type">form</field>

            <!--step 7. add view_id :- the external identifier. -->
            <!--But not using here, odoo'll give-->
            <!-- <field name="view_id" ref="product.product_template_tree_view"/> -->

            <!--step 8. add context:- to put values by default such as search or field value -->
            <!--note this will be added on action view -->
            <!--But not using here, odoo'll give-->
            <!-- <field name="context">{"default_testdata":1}</field> -->

            <!--step 9. add domain:- to filter on load-->
            <!--note this will be added on action view -->
            <!--But not using here, odoo'll give-->
            <!-- Approach 1 
            <field name="domain">[('testdata','=',1)]</field> -->

            <!-- Approach 2 add below and remove above field, don't hurry to remove from model->testdata-->
            <!--Note:- Below is a reference as you can access categ_id and it's further fields that shows up in sales->product->product category, all those fields on hover, their name can be seen -->

            <!-- <field name="domain">[('categ_id.name','=','Hr')]</field> -->

            <!--step 10. add help in html -->
            <field name="help" type="html">
                <p class="oe_view_nocontent_create">
                    Click to define new hr detail.
                </p>

            <!--step 11. ctrl+c to stop server, up arrow to re run, refresh browser   -->
            </field>
        </record>

            <!--Steps for CREATING ACTION 4 (CUSTOM CREATED) -->
            <!--note:-record id and menuitem action should be same-->
            <!--step 1. added record with id and 'action model' -->
        <record id="hr_team_action" model="ir.actions.act_window">

            <!--step 2. add name -->
            <field name="name">Hr team</field>

            <!--step 3. add type 'yhi use kro filal for this kind of work'-->
            <field name="type">ir.actions.act_window</field>

            <!--step 4. add 'res_model'in action !!:- 'yhi use kro filal for this kind of work' -->
            <field name="res_model">hr.team</field>

            <!--step 5. add view_mode:- choose the order->  from them first will be applied -->
            <field name="view_mode">tree,kanban,form</field>

            <!--step 6. add view_type:- will tell -->
            <field name="view_type">form</field>

            <!--step 7. add view_id :- the external identifier. -->
            <!--But not using here, odoo'll give-->
            <!-- <field name="view_id" ref="product.product_template_tree_view"/> -->

            <!--step 8. add context:- to put values by default such as search or field value -->
            <!--note this will be added on action view -->
            <!--But not using here, odoo'll give-->
            <!-- <field name="context">{"default_testdata":1}</field> -->

            <!--step 9. add domain:- to filter on load-->
            <!--note this will be added on action view -->
            <!--But not using here, odoo'll give-->
            <!-- Approach 1 
            <field name="domain">[('testdata','=',1)]</field> -->

            <!-- Approach 2 add below and remove above field, don't hurry to remove from model->testdata-->
            <!--Note:- Below is a reference as you can access categ_id and it's further fields that shows up in sales->product->product category, all those fields on hover, their name can be seen -->

            <!-- <field name="domain">[('categ_id.name','=','Hr')]</field> -->

            <!--step 10. add help in html -->
            <field name="help" type="html">
                <p class="oe_view_nocontent_create">
                    Click to define new hr team detail.
                </p>

            <!--step 11. ctrl+c to stop server, up arrow to re run, refresh browser   -->
            </field>
        </record>
<!-- actions end-->

<!-- menuitems start-->
            <!--Steps for CREATING MENUITEM 3 (CUSTOM CREATED)-->
            <!--note:-record id and menuitem action should be same-->
            <!--if its root menu 
            id="hr_details_menu_root"-->
        <menuitem action="hr_detail_action" 
            id="hr_details_menu_action"
            parent="base.menu_sales" sequence="15" 
        />

            <!--Steps for CREATING MENUITEM 4 (CUSTOM CREATED)-->
            <!--note:-record id and menuitem action should be same-->
            <!--if its root menu 
            id="hr_details_menu_root"-->
        <menuitem action="hr_team_action" 
            id="hr_team_menu_action"
            parent="base.menu_sales" sequence="16" 
        />
<!-- menuitems end-->
       

    </data>
</openerp>